{"version":3,"file":"react-seo-component.cjs.production.min.js","sources":["../src/facebook.tsx","../src/twitter.tsx","../src/seo.tsx"],"sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface Props {\n  url: string\n  type: string\n  title: string\n  desc: string\n  image: string\n  locale: string\n}\n\nexport const Facebook = ({\n  url,\n  type,\n  title,\n  desc,\n  image,\n  locale,\n}: Props) => (\n  <Helmet>\n    <meta property=\"og:locale\" content={locale} />\n    <meta property=\"og:url\" content={url} />\n    <meta property=\"og:type\" content={type} />\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={desc} />\n    <meta property=\"og:image\" content={image} />\n    <meta property=\"og:image:alt\" content={desc} />\n  </Helmet>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface Props {\n  type?: string // optional denoted with ?\n  username: string\n  title: string\n  desc: string\n  image: string\n}\n\nexport const Twitter = ({\n  type = 'summary_large_image',\n  username,\n  title,\n  desc,\n  image,\n}: Props) => (\n  <Helmet>\n    {username && <meta name=\"twitter:creator\" content={username} />}\n    <meta name=\"twitter:card\" content={type} />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={desc} />\n    <meta name=\"twitter:image\" content={image} />\n    <meta name=\"twitter:image:alt\" content={desc} />\n  </Helmet>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Facebook } from './facebook'\nimport { Twitter } from './twitter'\n\ninterface Props {\n  title: string\n  titleTemplate: string\n  titleSeparator?: string\n  description: string\n  pathname: string\n  article?: boolean\n  image?: string\n  siteLanguage: string\n  siteLocale: string\n  twitterUsername: string\n  author?: string\n  datePublished?: string\n  dateModified?: string\n}\n\nexport const SEO = ({\n  title,\n  titleTemplate,\n  titleSeparator,\n  description,\n  pathname,\n  article = false,\n  image,\n  siteLanguage,\n  siteLocale,\n  twitterUsername,\n  author = 'J Doe.',\n  datePublished,\n  dateModified,\n}: Props) => {\n  const seo = {\n    title: title.slice(0, 70),\n    description: description.slice(0, 160),\n    datePublished: datePublished\n      ? null\n      : new Date(Date.now()).toISOString(),\n    dateModified: dateModified\n      ? null\n      : new Date(Date.now()).toISOString(),\n  }\n\n  const copyrightYear = new Date().getFullYear()\n\n  // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n  // Structured Data Testing Tool >>\n  // https://search.google.com/structured-data/testing-tool\n\n  const schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: pathname,\n    headline: seo.description,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: pathname,\n    description: seo.description,\n    name: seo.title,\n    author: {\n      '@type': 'Person',\n      name: author,\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: author,\n    },\n    copyrightYear,\n    creator: {\n      '@type': 'Person',\n      name: author,\n    },\n    publisher: {\n      '@type': 'Person',\n      name: author,\n    },\n    datePublished: seo.datePublished,\n    dateModified: seo.dateModified,\n    image: {\n      '@type': 'ImageObject',\n      url: `${image}`,\n    },\n  }\n\n  // Initial breadcrumb list\n\n  const itemListElement = [\n    {\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: 'Homepage',\n      },\n      position: 1,\n    },\n  ]\n\n  let schemaArticle = null\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: author,\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: author,\n      },\n      copyrightYear,\n      creator: {\n        '@type': 'Person',\n        name: author,\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: author,\n        logo: {\n          '@type': 'ImageObject',\n          url: `${image}`,\n        },\n      },\n      datePublished: seo.datePublished,\n      dateModified: seo.dateModified,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: pathname,\n      name: seo.title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      mainEntityOfPage: pathname,\n    }\n    // Push current blog post into breadcrumb list\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: seo.title,\n      },\n      position: 2,\n    })\n  }\n\n  const breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement,\n  }\n\n  return (\n    <>\n      <Helmet\n        title={seo.title}\n        titleTemplate={`%s ${\n          titleSeparator ? titleSeparator : `Â·`\n        } ${titleTemplate}`}\n      >\n        <html lang={siteLanguage ? siteLanguage : 'en'} />\n        <link rel=\"canonical\" href={pathname} />\n        <meta name=\"description\" content={seo.description} />\n\n        {!article && (\n          <script type=\"application/ld+json\">\n            {JSON.stringify(schemaOrgWebPage)}\n          </script>\n        )}\n        {article && (\n          <script type=\"application/ld+json\">\n            {JSON.stringify(schemaArticle)}\n          </script>\n        )}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(breadcrumb)}\n        </script>\n      </Helmet>\n      {image && (\n        <>\n          <Facebook\n            desc={seo.description}\n            image={image}\n            title={seo.title}\n            type={article ? 'article' : 'website'}\n            url={pathname}\n            locale={siteLocale ? siteLocale : 'en_gb'}\n          />\n          <Twitter\n            title={seo.title}\n            image={image}\n            desc={seo.description}\n            username={twitterUsername}\n          />\n        </>\n      )}\n    </>\n  )\n}\n"],"names":["Facebook","url","type","title","desc","image","React","Helmet","property","content","locale","Twitter","username","name","titleTemplate","titleSeparator","description","pathname","article","siteLanguage","siteLocale","twitterUsername","author","datePublished","dateModified","seo","slice","Date","now","toISOString","copyrightYear","getFullYear","schemaOrgWebPage","headline","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","itemListElement","item","position","schemaArticle","logo","push","breadcrumb","lang","rel","href","JSON","stringify"],"mappings":"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"}